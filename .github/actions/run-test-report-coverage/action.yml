name: Install and run tests with coverage
inputs:
  open-cpp-coverage-version:
    description: "OpenCppCoverage version to install"
    required: true
    default: "0.9.9.0"
runs:
  using: "composite"
  steps:
    - name: Restore OpenCppCoverage installation
      if: runner.os == 'windows'
      uses: actions/cache@v4
      with:
        path: C:\Program Files\OpenCppCoverage
        key: open-cpp-coverage-${{ inputs.open-cpp-coverage-version }}
    - name: Install OpenCppCoverage
      if: runner.os == 'windows' && !steps.restore-open-cpp-coverage.outputs.cache-hit
      shell: bash
      run: choco install OpenCppCoverage --version=${{ inputs.open-cpp-coverage-version }} -y
    - name: Add OpenCppCoverage to PATH
      if: runner.os == 'windows'
      shell: bash
      run: echo "C:\Program Files\OpenCppCoverage" >> $env:GITHUB_PATH
    - name: Restore PDM installation
      id: pdm
      uses: ./.github/actions/restore-pdm
    - name: Get Python version
      id: get-python-version
      uses: ./.github/actions/get-python-version
    - name: Restore test cache
      id: cache-pdm-test
      uses: actions/cache@v4
      with:
        path: ${{ steps.pdm.outputs.pdm-cache-dir }}
        key: ${{ runner.os }}-${{ steps.get-python-version.outputs.python-version }}-pdm-test-${{ hashFiles('pyproject.toml', 'pdm.lock') }}
    - name: Install lint deps (CL)
      if: runner.os == 'windows'
      shell: bash
      run: pdm install -v -G test
      env:
        WITH_COVERAGE: 1
    - name: Install lint deps (LLVM)
      if: matrix.os == 'macos'
      shell: bash
      run: pdm install -v -G test
      env:
        WITH_COVERAGE: 1
        CC: clang
    - name: Install lint deps (GCC)
      if: runner.os == 'ubuntu'
      shell: bash
      run: pdm install -v -G test
      env:
        WITH_COVERAGE: 1
        CC: gcc
    - name: Run unit tests with coverage (CL)
      if: runner.os == 'windows'
      shell: bash
      run: OpenCppCoverage --sources src\\levdist --modules src\\levdist --export_type cobertura:native.xml --optimized_build  --cover_children -- pdm test-cov
    - name: Run unit tests with coverage (LLVM)
      if: matrix.os == 'macos'
      shell: bash
      run: |
        pdm test-cov
        xcrun llvm-profdata merge -sparse coverage.profraw -o coverage.profdata
        xcrun llvm-cov export --arch=arm64 --format=lcov --instr-profile=coverage.profdata src/levdist/native.*.so > coverage.lcov
      env:
        LLVM_PROFILE_FILE: coverage.profraw
    - name: Run unit tests with coverage (GCC)
      if: runner.os == 'ubuntu'
      shell: bash
      run: pdm test-cov
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml,./native.xml
        flags: OS-${{ matrix.os }}-Python-${{ matrix.python_version }}
