name: Upload Python Package to PyPI when a Release is Created
on:
  push:
    tags:
      - "v*.*.*"
permissions: {}
jobs:
  cibuildwheel-cpython:
    name: Build wheel package for CPython
    permissions:
      contents: read
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
        python-version: [cp39, cp310, cp311, cp312, cp313]
      fail-fast: true
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.1
        env:
          CIBW_BUILD: ${{ matrix.python-version }}-*
          CIBW_ARCHS_LINUX: auto aarch64 ppc64le s390x
      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}-${{ matrix.python-version }}
          path: wheelhouse/*
          retention-days: 1
  cibuildwheel-pypy:
    permissions:
      contents: read
    name: Build wheels for PyPy
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
        python-version: [pp310]
      fail-fast: true
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.1
        env:
          CIBW_BUILD: ${{ matrix.python-version }}-*
          CIBW_ARCHS_LINUX: auto aarch64
      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}-${{ matrix.python-version }}
          path: wheelhouse/*
          retention-days: 1
  publish:
    name: Make release
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: [cibuildwheel-cpython, cibuildwheel-pypy]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Setup PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: 3.9
      - name: Install twine
        run: pip install twine
      - name: Build sdist
        run: pdm build --no-wheel
      - name: Download artifacts
        id: download-artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          merge-multiple: true
          path: wheels
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*
            wheels/*
      - name: Publish to PyPI
        run: |
          twine upload --disable-progress-bar dist/*
          twine upload --disable-progress-bar wheels/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
