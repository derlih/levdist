name: Upload Python Package to PyPI when a Release is Created

on:
  release:
    types: [created]

permissions: {}

env:
  PDM_VERSION: 2.17.1
  PDM_PUBLISH_REPO: https://test.pypi.org/legacy/


jobs:
  build_dist:
    permissions:
      contents: read

    strategy:
      matrix:
        python_version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        os: [ubuntu, macos, windows]
      fail-fast: true

    runs-on: ${{ matrix.os }}-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install python
        uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: ${{ matrix.python_version }}
      - name: Restore PDM installation
        id: cache-pdm
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-pdm-${{ env.PDM_VERSION}}
      - name: Install PDM
        run: pip install pdm==${{ env.PDM_VERSION }}
      - name: Build sdist
        if: ${{ matrix.os }} == "ubuntu" && ${{ matrix.python_version }} == "3.8"
        run: pdm build --no-wheel
      - name: Build wheel
        run: pdm build --no-sdist
      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}-${{ matrix.python_version }}
          path: dist/*

  publish:
    permissions:
      contents: read

    runs-on: ubuntu-latest
    needs: build_dist

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download artifacts
        id: download-artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - name: Publish to PyPI
        run: pdm publish -r "${{ env.PDM_PUBLISH_REPO }}" -u "__token__" -P "${{ secrets.PYPI_TOKEN }}"
