[project]
name = "levdist"
dynamic = ["version"]
description = "Package to calculate the Levenstein distance"
authors = [{ name = "Dmitry Erlikh", email = "derlih@gmail.com" }]
dependencies = []
requires-python = ">=3.8"
readme = "README.md"
license = { text = "MIT" }
keywords = ["levenstein", "edit distance"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Typing :: Typed",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.urls]
Homepage = "https://github.com/derlih/levdist"
Issues = "https://github.com/derlih/levdist/issues"

[build-system]
requires = ["pdm-backend", "setuptools"]
build-backend = "pdm.backend"

[tool.pdm]
distribution = true

[tool.pdm.build]
run-setuptools = true

[tool.pdm.version]
source = "scm"

[tool.pdm.dev-dependencies]
test = ["pytest>=8.3.2", "coverage>=7.6.1", "pytest-cov>=5.0.0"]
lint = ["pre-commit>=3.5.0", "mypy>=1.11.2"]
benchmark = [
    "pylev>=1.4.0",
    "Levenshtein>=0.25.1",
    "python-Levenshtein>=0.25.1",
    "leven>=1.0.4",
    "typer>=0.12.5",
]

[tool.pdm.scripts]
test = "pytest"
lint = "pre-commit run --all-files"
mypy = "mypy src"
benchmark = "python benchmark.py"

test-cov.composite = ["pytest --cov src", "python -m coverage xml"]

# LLVM coverage
test-cov-llvm.shell = "{pdm} run test-cov"
test-cov-llvm.env = { LLVM_PROFILE_FILE = "coverage.profraw" }
llvm-convert-coverage-file = "xcrun llvm-profdata merge -sparse coverage.profraw -o coverage.profdata"
llvm-generate-lcov = { shell = "xcrun llvm-cov export --arch=arm64 --format=lcov --instr-profile=coverage.profdata src/levdist/native.*.so > coverage.lcov" }
post_test-cov-llvm.composite = [
    "{pdm} run llvm-convert-coverage-file",
    "{pdm} run llvm-generate-lcov",
]

# GCC coverage
test-cov-gcc.shell = "{pdm} run test-cov"

[tool.mypy]
strict = true
exclude = ["tests"]

[tool.coverage.run]
branch = true
omit = ["tests", "__init__.py"]
